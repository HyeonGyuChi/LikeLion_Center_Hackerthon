"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xj6t04ym2$r5^z6xm41p0tnf%2j(lw%m2%b*%y(4*-_z%*kcup'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'indexapp',
    'docxmerge',
    'authtools',
    'users',
    
    'django.contrib.sites', # sites 추가

    # allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # provider 구글 페이스북 ..소셜로그인 제공업체
    'allauth.socialaccount.providers.google',

    # # poppler pdf file renderer
    # 'poppler'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'project', 'templates')], #'project/templates'
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # `allauth` needs this from django
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images) # 의미없는 commit
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'project', 'static')
]

STATIC_ROOT = os.path.join(BASE_DIR, '.static_root')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# # Register stuff
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'index'
LOGOUT_REDIRECT_URL = 'index'

AUTH_USER_MODEL = 'users.User'

# for allauth
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1

# 추가설정 for allauth 
ACCOUNT_AUTHENTICATION_METHOD = 'email' # email기반 account
ACCOUNT_EMAIL_REQUIRED = True # must fill in email
ACCOUNT_EMAIL_VERIFICATION = 'none' # 이메일 인증 x

ACCOUNT_USERNAME_REQUIRED = True # must fill in username // #@gmail.com => ^로 username 설정오류
SOCIALACCOUNT_AUTO_SIGNUP = False # social로그인에서 바로 users로 회원가입 방지

ACCOUNT_LOGOUT_ON_GET = True # logout시 바로 로그아웃

ACCOUNT_FORMS = {
    'login': 'users.forms.MyCustomLoginForm', # accounts/login.html
    'signup': 'users.forms.MyCustomSignupForm', # accounts/signup.html
}

SOCIALACCOUNT_FORMS = {
    'signup': 'users.forms.MyCustomSocialSignupForm', # socialaccount/signup.html
}


# ACCOUNT_USER_MODEL_USERNAME_FIELD = None